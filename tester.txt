def valueChanged(tag, tagPath, previousValue, currentValue, initialChange, missedEvents):
	value = newValue.value
	
	mapping =  {3 : "hi"}
	
	if value in mapping:
	    string_value = mapping[value]
	    
	    try:
	        system.tag.writeBlocking(paths=["[default]tester"], values=[string_value])
	    
	    except Exception as e:
	        system.gui.messageBox("Error writing to tag: %s" % e)

------------------------------
value = 3
if value == 3:
	try:
	    system.tag.writeBlocking(["[default]ReaderTag"], values=["hey"])
	except Exception as e:
	    system.gui.messageBox("Error writing to tag:%s" % e)
[Error_TypeConversion("Error trying to coerce 'hey' to a number.")]









=====================================================
value = system.tag.readBlocking(["[MQTT Engine]Edge Nodes/McConnellsburg/Frame Fabrication/Robot Cell 7/raw/Robot 4/Field1"])[0].value

if value == 3:
	try:
	    system.tag.writeBlocking(["[default]ReaderTag"], values=["autos"])
	except Exception as e:
	    system.gui.messageBox("Error writing to tag:%s" % e)
	

def valueChanged(tag, tagPath, previousValue, currentValue, initialChange, missedEvents):
	value = system.tag.readBlocking(["[MQTT Engine]Edge Nodes/McConnellsburg/Frame Fabrication/Robot Cell 7/raw/Robot 4/Field1"])[0].value
	print value
	if value == 3:
	    print('inside the if block')
	try:
		system.tag.writeBlocking(["[default]Robot4status"], values=["Blocked"])
	except Exception as e:
		system.gui.messageBox("Error writing to tag:%s" % e)
	
	========================================================
def valueChanged(tag, tagPath, previousValue, currentValue, initialChange, missedEvents):
    value = system.tag.readBlocking(["[MQTT Engine]Edge Nodes/McConnellsburg/Frame Fabrication/Robot Cell 7/raw/Robot 4/Field1"])[0].value
    print value
    status = ""
    if value == 3:
        print('inside the if block for value 3')
        status = "Blocked"
    elif value == 4:
        print('inside the if block for value 4')
        status = "Running"
    elif value == 5:
        print('inside the if block for value 5')
        status = "Cool"
    else:
        print('Unexpected value')
    try:
        system.tag.writeBlocking(["[default]Robot4status"], values=[status])
    except Exception as e:
        system.gui.messageBox("Error writing to tag:%s" % e)
============================================================================
def valueChanged(tag, tagPath, previousValue, currentValue, initialChange, missedEvents):
    value = system.tag.readBlocking(["[MQTT Engine]Edge Nodes/McConnellsburg/Frame Fabrication/Robot Cell 7/raw/Robot 4/Field1"])[0].value
    print value

    # Define a dictionary that maps values to statuses
    value_status_map = {3: "Blocked", 4: "Running", 5: "Cool"}

    # Default status for unexpected values
    status = "Unknown"

    if value in value_status_map:
        status = value_status_map[value]
        print(f'inside the if block for value {value}, status: {status}')
    else:
        print('Unexpected value')
        
    try:
        system.tag.writeBlocking(["[default]Robot4status"], values=[status])
    except Exception as e:
        system.gui.messageBox("Error writing to tag:%s" % e)
---------------
concat(
    "Alarm code: ", toString({[~]field O}),
    ", Current lamp: ", if({[~]field 5}=0, "no lamps", if({[~]field 5}=1, "Start lamp is on", "Held lamp is on")),
    ", Job Line: ", toString({[~]field 1}),
    ", Job name: ", toString({[~]field 6}),
    ", Job step: ", toString({[~]field 2}),
    ", Mode: ", if({[~]field 3}=0, "teach", "play"),
    ", Part number: ", toString({[~]field 7}),
    ", Station running: ", if({[~]field 4}=0, "no stations running", if({[~]field 4}=1, "station A running", "station B running"))
)
"Alarm code: ", toString({[MQTT Engine]Edge Nodes/McConnellsburg/Frame Fabrication/Robot Cell 7/raw/Robot 4]field O}),
